function e(e){return!e.items||0===e.items.length}function n(n,t){!function n(r){e(r)?t&&t(r):(t&&t(r,!1),r.items.forEach((e=>n(e))),t&&t(r,!0))}(n)}function t(t){let r=[],o=[];return n(t,((n,t)=>e(n)?o.push([...r,n]):t?r.pop():r.push(n))),o}function r(e){return e.toString().replace(/[-[\]{}()*+!<=:?.\/\\^$|#\s,]/g,"\\$&")}function o(e,n,t){if(!t)return new RegExp(e,n);let r=e;return Object.keys(t).forEach((e=>{r=r.replace(new RegExp(`{${e}}`,"g"),t[e])})),new RegExp(r,n)}function i(e,n,t,i,c=!0){let s=(c?e.map(r):e).join("|");return n&&(s=`(${s})${n}`),o(s,t||"g",i)}function c(e,n,t){let i=`${e.map(r).join("?")}?`;return n&&(i=`(${i})${n}`),o(i,t||"g")}function s(e,n){const t={};return Object.entries(n).forEach((([n,r])=>{(e.match(r)||[]).forEach((e=>t[n]=e))})),t}function u(e){return(e.match(/-?\d+(\.\d+)?/g)||[]).map((e=>parseFloat(e)))}function a(e){const n=e.charCodeAt(0);return n>=48&&n<58?n-48:-1}function l(e,n){let t=0,r=0;for(;n<e.length;){const o=e[n];if("."===o){r=1,n++;continue}const i=a(o);if(-1===i)break;0===r?t=10*t+i:(r*=10,t+=i/r),n++}return{num:t,index:n}}function f(e){return"("===e}function p(e){const n=[],t=[];function r(){if(f(t.at(-1)))return;const e=n.pop(),r=n.pop(),o=t.pop();null!=e&&null!=r&&o&&n.push(function(e,n,t){switch(t){case"+":return e+n;case"-":return e-n;case"*":return e*n;case"/":return Math.floor(e/n)}return 0}(r,e,o))}function o(e){const n=t.at(-1);return!n||f(n)||function(e,n){return["*","/"].includes(e)&&["+","-"].includes(n)}(e,n)}for(let i=0;i<e.length;i++){const c=e[i];if(" "!==c)switch(c){case"(":t.push(c);break;case")":for(;"("!==t.at(-1);)r();t.pop();break;case"+":case"-":case"*":case"/":{let s=i-1;for(;s>=0&&" "===e[s];)s-=1;"-"!==c||0!==i&&!f(e[s])||n.push(0);let u=o(c);for(;!u;)r(),u=o(c);t.push(c);break}default:{const{num:t,index:r}=l(e,i);i=r-1,n.push(t);break}}}for(;t.length>0;)r();return n[0]||0}const h=()=>{};function d(){const e={promise:void 0,isResolved:!1,isRejected:!1,isFinished:!1,resolve:void 0,reject:void 0,cancel:h};return e.promise=new Promise(((n,t)=>{e.resolve=t=>{e.isFinished||(e.isResolved=!0,e.isFinished=!0,n(t),e.value=t)},e.reject=n=>{e.isFinished||(e.isRejected=!0,e.isFinished=!0,t(n))}})),e}function m(e){const n=d();return n.resolve(e),n}function g(e){const n=d(),t=setTimeout(n.resolve,e);return n.cancel=()=>clearTimeout(t),n}async function w(e){let n=new FileReader,t=d();return n.readAsDataURL(e),n.onload=e=>t.resolve(n.result),n.onerror=t.reject,t.promise}function v(e,n="temp"){const[t,r]=e.split(",")||[];if(!t||!r)throw new Error("invalid dataURL!");const o=(t.match(/:(.*?);/)||[])[1],i=o.split("/")[1],c=window.atob(r);let s=c.length,u=new Uint8Array(s);for(;s--;)u[s]=c.charCodeAt(s);return new File([u],`${n}.${i}`,{type:o})}export{p as calculate,d as createDefer,c as createExistRegexp,i as createOrRegexp,o as createRegexp,m as createResolvedDefer,g as createTimeoutDefer,v as dataURLtoFile,n as dfs,w as fileToDataURL,t as getPaths,l as getRangeNumber,e as isLeaf,a as toNumber,u as useNumberRegexp,s as useTaggedRegexp};
